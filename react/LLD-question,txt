𝟭. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗶𝗺𝗽𝗹𝗲𝗺𝗲𝗻𝘁 𝗮 𝘁𝗼𝗮𝘀𝘁 𝗻𝗼𝘁𝗶𝗳𝗶𝗰𝗮𝘁𝗶𝗼𝗻 𝘀𝘆𝘀𝘁𝗲𝗺 𝗶𝗻 𝗥𝗲𝗮𝗰𝘁?
 - Describe how to handle global notification state and display logic.
 - How would you queue multiple notifications, set timeouts, and avoid overlapping?
 - Would you use Context, Redux, or a custom event system?

𝟮. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗯𝘂𝗶𝗹𝗱 𝗮 𝗰𝗼𝗺𝗺𝗲𝗻𝘁 𝘁𝗵𝗿𝗲𝗮𝗱 𝗳𝗲𝗮𝘁𝘂𝗿𝗲 𝘄𝗶𝘁𝗵 𝗻𝗲𝘀𝘁𝗲𝗱 𝗿𝗲𝗽𝗹𝗶𝗲𝘀?
 - How would you structure and render recursive components for nested replies?
 - What approach would you take to optimize rendering and manage unique keys for updates?

𝟯. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗱𝗲𝘀𝗶𝗴𝗻 𝗮 𝗿𝗲𝘀𝗽𝗼𝗻𝘀𝗶𝘃𝗲 𝘀𝗶𝗱𝗲𝗯𝗮𝗿 𝗻𝗮𝘃𝗶𝗴𝗮𝘁𝗶𝗼𝗻 𝗰𝗼𝗺𝗽𝗼𝗻𝗲𝗻𝘁?
 - Explain your strategy for mobile vs desktop responsiveness and conditional rendering.
 - How would you handle submenu toggling, animations, and route linking?

𝟰. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗶𝗺𝗽𝗹𝗲𝗺𝗲𝗻𝘁 𝗮 𝘁𝗮𝗯 𝗰𝗼𝗺𝗽𝗼𝗻𝗲𝗻𝘁 𝘄𝗶𝘁𝗵 𝗮𝗻𝗶𝗺𝗮𝘁𝗲𝗱 𝘀𝘄𝗶𝘁𝗰𝗵𝗶𝗻𝗴?
 - How would you structure tab data and state for dynamic tab rendering?
 - Would you use CSSTransition, Framer Motion, or CSS keyframes for animation?

𝟱. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗯𝘂𝗶𝗹𝗱 𝗮 𝗳𝗶𝗹𝘁𝗲𝗿𝗮𝗯𝗹𝗲 𝗮𝗻𝗱 𝘀𝗼𝗿𝘁𝗮𝗯𝗹𝗲 𝗱𝗮𝘁𝗮 𝘁𝗮𝗯𝗹𝗲?
 - How would you handle large data sets efficiently in a table with client- or server-side filtering?
 - Discuss how to modularize the table headers, pagination, and rows.

𝟲. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗱𝗲𝘀𝗶𝗴𝗻 𝗮 𝗳𝗮𝘃𝗼𝗿𝗶𝘁𝗲 / 𝗹𝗶𝗸𝗲 𝗯𝘂𝘁𝘁𝗼𝗻 𝘄𝗶𝘁𝗵 𝗼𝗽𝘁𝗶𝗺𝗶𝘀𝘁𝗶𝗰 𝘂𝗽𝗱𝗮𝘁𝗲𝘀?
 - How would you update the UI immediately before the server responds?
 - How would you roll back the UI if the API call fails?

𝟳. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗶𝗺𝗽𝗹𝗲𝗺𝗲𝗻𝘁 𝗮 𝗹𝗶𝘃𝗲 𝗰𝗵𝗮𝘁 𝗳𝗲𝗮𝘁𝘂𝗿𝗲 𝗶𝗻 𝗥𝗲𝗮𝗰𝘁?
 - Describe your approach using WebSockets or polling.
 - How would you manage message state, loading indicators, and typing status?

𝟴. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗯𝘂𝗶𝗹𝗱 𝗮 𝗿𝗮𝘁𝗲 𝗹𝗶𝗺𝗶𝘁𝗲𝗿 𝗼𝗿 𝘁𝗵𝗿𝗼𝘁𝘁𝗹𝗶𝗻𝗴 𝗹𝗼𝗴𝗶𝗰 𝗳𝗼𝗿 𝗮 𝗯𝘂𝘁𝘁𝗼𝗻 𝗰𝗹𝗶𝗰𝗸?
 - How would you prevent multiple API hits on rapid user interaction?
 - Would you use lodash throttle, debounce, or custom logic?

𝟵. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗯𝘂𝗶𝗹𝗱 𝗮 𝗰𝗼𝗹𝗹𝗮𝗽𝘀𝗶𝗯𝗹𝗲 𝗔𝗖𝗖𝗢𝗥𝗗𝗜𝗢𝗡 𝗰𝗼𝗺𝗽𝗼𝗻𝗲𝗻𝘁?
 - Explain how you would manage active sections and transition effects.
 - Would you allow multiple open sections or single-active behavior?

𝟭𝟬. 𝗛𝗼𝘄 𝘄𝗼𝘂𝗹𝗱 𝘆𝗼𝘂 𝗶𝗺𝗽𝗹𝗲𝗺𝗲𝗻𝘁 𝘁𝗵𝗲𝗺𝗶𝗻𝗴 (𝗱𝗮𝗿𝗸 / 𝗹𝗶𝗴𝗵𝘁 𝗺𝗼𝗱𝗲) 𝗶𝗻 𝗮 𝗥𝗲𝗮𝗰𝘁 𝗮𝗽𝗽?
 - Describe how you'd store and apply the theme preference globally.
 - Would you use CSS variables, Context API, or a theming library?
