1. What is React?
 2. What is useMemo ?
 3. What are the features of React ?
 4. What is JSX ?
 5. What is DOM ?
 6. What is Virtual Dom ?
 7. What is component life cycle of React class component ?
 8. What are fragments in react ?
 9. What are props in react ?
 10. What are synthetic events in react ?
 11. What are the difference between Package.json and Package.lock.json ?
 12. What are the differences between client side and server side rendering ?
 13. What is state in Reactjs?
 14. What are props ?
 15. What are the differences between State and Props in react ?
 16. What is props drilling ?
 17. What are the disadvantages of props drilling and How we can avoid props drilling ?
 18. What are Pure components in React ?
 19. Whatare Ref’s in React?
 20. What is meant by forward ref ?
 21. What are Error boundaries ?
 22. What are Higher order components in react ?
 23. What are the differences between controlled and uncontrolled components ? 
 24. What is useCallback ?
 25. What are the differences between useMemo and useCallback ?
 26. What are keys in React ?
 27. What is Lazy loading in React ?
 28. What is suspense in React ?
 29. What are custom hooks ?
 30. What is useReducer hook ?
 31. What are Portals in react ?
 32. What is context in react ?
 33. Practical question: Give an example of context api usage ?
 34. What is the purpose of callback function as an argument of setState()?
 35. Practical question: create a custom hook for increment/decrement counter ?
 36. Which lifecycle hooks in class component are replaced with useEffect in functional components ?
 37. What is Strict mode in react ?
 38. What are the different ways to pass data from child component to parent component in react ?
 39. Practical question: How to send data from child to parent using callback functions ?
 40. Practical question: How to send the data from child component to parent using useRef ?
 41. How do you optimize your react application ?
 42. How would you consume a RESTful JSON API in reactjs?
 43.different design patterns used in react?
 44. context api vs redux
 45. prop types in react(How to apply validation on props in react)
 46. What are React Mixins ?
 47. what are the different hooks you have used ?
 48. What are render props in react ?
 49. What are the different types of exports and imports ?
 50. What are the differences between create element vs clone element in react ?
 51. When to use useState and useReducer?
 52. What are protected routes in react ?
 53. What is react-router has context menu




➤ Commonly Asked JavaScript Interview Questions (Divided into Levels)

𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁 𝗘𝗻𝗴𝗶𝗻𝗲 𝗮𝗻𝗱 𝗖𝗼𝗺𝗽𝗶𝗹𝗮𝘁𝗶𝗼𝗻

1. What is a JavaScript engine, and how does it work?
2. What are the different JavaScript engines available (V8, SpiderMonkey, Chakra, etc.)?
3. What is Just-In-Time (JIT) compilation, and how does it optimize JavaScript performance?
4. What are the different phases of JavaScript execution? (Parsing, Compilation, and Execution)
5. What is an Abstract Syntax Tree (AST), and how is it generated?
6. How does JavaScript handle memory allocation and garbage collection?
7. What is the role of the interpreter and compiler in JavaScript execution?
8. What is the difference between a runtime and a JavaScript engine?
9. How does the optimizing compiler improve JavaScript performance?
10. What is hidden class optimization in V8, and why is it important?

𝗘𝘅𝗲𝗰𝘂𝘁𝗶𝗼𝗻 𝗖𝗼𝗻𝘁𝗲𝘅𝘁 𝗮𝗻𝗱 𝗦𝗰𝗼𝗽𝗲

11. What is an Execution Context, and how is it created in JavaScript?
12. What are the different types of Execution Contexts in JavaScript? (Global, Function, Eval)
13. What is the Execution Stack (Call Stack), and how does JavaScript manage function calls?
14. What is Scope in JavaScript, and how does Lexical Scope work?
15. What is the difference between the Global Execution Context and Function Execution Context?
16. What is the Scope Chain, and how does it help resolve variables?
17. What is Hoisting, and how does JavaScript handle it?
18. What is the Temporal Dead Zone (TDZ) in JavaScript?
19. What is Closure, and how does it work internally?
20. What is the this keyword, and how does it behave in different contexts?

𝗠𝗲𝗺𝗼𝗿𝘆 𝗠𝗮𝗻𝗮𝗴𝗲𝗺𝗲𝗻𝘁 𝗮𝗻𝗱 𝗚𝗮𝗿𝗯𝗮𝗴𝗲 𝗖𝗼𝗹𝗹𝗲𝗰𝘁𝗶𝗼𝗻

21. What is the difference between Stack and Heap memory in JavaScript?
22. How does JavaScript manage memory and avoid memory leaks?
23. What is Garbage Collection, and how does it work in JavaScript?
24. What are the different types of Garbage Collection algorithms? (Mark and Sweep, Reference Counting)
25. What is a memory leak in JavaScript, and how can you prevent it?
26. How do WeakMap and WeakSet help with memory management?
27. What are closures, and how can they cause memory leaks?
28. How can you monitor and optimize JavaScript memory usage?
29. How does JavaScript handle large objects and memory-intensive operations?
30. What are Typed Arrays, and how do they improve performance in JavaScript?



#3

Technical Round 1:
1. What are the differences between variables and functions?
2. Can you explain hoisting, Bindings, and closures in JavaScript?
3. How does the React Virtual DOM with Tree to enhance performance?
4. What are the advantages of using hooks and custom hooks in React?
5. Differences between functional and class components in React?
6. How do you manage state in a React application with flow?
7. What is the purpose of keys in React lists?
8. Can you describe the lifecycle methods of a React component?
9. How do you optimize component performance in React?
10. Explain the use of the useMemo, useCallBack, useRef and useReducer hook with an example.
11. What is the Context API, and how can it be a simpler alternative to Redux?
12. How do you ensure accessibility in React applications?
13. JS coding problems involving objects and arrays.

Technical Round 2: (On-site)
1. JS coding problems
2. Advanced React questions with coding session
3. CSS questions
4. Advanced HTML questions
5. Problem-solving session
6. React and HTML DOM questions
7. Security and vulnerability questions
8. Webpack and NPM
